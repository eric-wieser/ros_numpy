sudo: required
language: generic
# Build matrix
jobs:
  include:
    - os: linux
      dist: xenial
      env: ROS_DISTRO=kinetic
    - os: linux
      dist: bionic
      env: ROS_DISTRO=melodic
    - os: linux
      dist: focal
      env: ROS_DISTRO=noetic
# Install system dependencies, namely ROS.
before_install:
  # Define some config vars.
  - export ROS_CI_DESKTOP=`lsb_release -cs`  # e.g. [xenial|bionic|focal]
  - export CI_SOURCE_PATH=$(pwd)
  - export REPOSITORY_NAME=${PWD##*/}
  - export ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
  - export CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
  - export ROS_PARALLEL_JOBS='-j8 -l6'
  - export PYTHON_NAME=$([[ $(lsb_release -cs) = focal ]] && echo python3 || echo python)
  # Install ROS
  - sudo sh -c "echo \"deb http://packages.ros.org/ros-shadow-fixed/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  # Install ROS
  - sudo apt-get install -y $PYTHON_NAME-catkin-pkg $PYTHON_NAME-catkin-tools $PYTHON_NAME-rosdep $PYTHON_NAME-wstool $PYTHON_NAME-osrf-pycommon ros-$ROS_DISTRO-catkin
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Setup for rosdep
  - sudo rosdep init
  - rosdep update

# Create a catkin workspace with the package under test.
install:
  - mkdir -p ~/catkin_ws/src

  # Add the package under test to the workspace.
  - cd ~/catkin_ws/src
  - ln -s $CI_SOURCE_PATH . # Link the repo we are testing to the new workspace

# Install all dependencies, using wstool and rosdep.
# wstool looks for a ROSINSTALL_FILE defined in before_install.
before_script:
  # source dependencies: install using wstool.
  - cd ~/catkin_ws/src
  - wstool init
  - if [[ -f $ROSINSTALL_FILE ]] ; then wstool merge $ROSINSTALL_FILE ; fi
  - wstool up

  # package depdencies: install using rosdep.
  - cd ~/catkin_ws
  - rosdep install -y -r --from-paths src --ignore-src --rosdistro $ROS_DISTRO

# Compile and test.
script:
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - cd ~/catkin_ws
  - catkin build -p1 -j1
  - catkin run_tests -p1 -j1
  - catkin_test_results --all build
  - catkin clean -b -y
  - catkin config --install
  - catkin build -p1 -j1
after_failure:
  - find ${HOME}/.ros/test_results -type f -exec echo "== {} ==" \; -exec cat {} \;
  - for file in ${HOME}/.ros/log/rostest-*; do echo "=== $file ==="; cat $file; done
